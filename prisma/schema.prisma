// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String      @id @default(uuid())
  name      String
  Companion Companion[]
}

model Companion {
  id           String @id @default(uuid())
  userId       String
  userName     String
  src          String
  name         String @db.Text
  description  String
  instructions String @db.Text
  seed         String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  @@index([categoryId])
  @@fulltext([name])


  messages   Message[] // One companion can have many messages
}

enum Role {
  user
  system
}

model Message {
  id          String @id @default(uuid())
  role        Role
  content     String @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  companionId String
  userId      String

  companion Companion @relation(fields: [companionId], references: [id], onDelete: Cascade) //Message belongs to a companion, if a companion is deleted then all their associated Messages are also deleted
@@index([companionId])
}


//npx prisma geneate to add the prisma client into the node modules
//npx prisma db push to push the changes into the remote database